=============================================================
 1. Create New Spring Boot Project - Using Spring Initializer
=============================================================
Project = Maven
Language = Java
Spring Boot = Latest
Project Metadata
	Group = com.inb
	Artifact = accounts
	Name = accounts
	Description = Demo project for Spring Boot
	Package name = com.eazybytes.accounts
	Packagin = Jar
	Java Version = 17 (Minimum)
Dependencies
	1. Spring Web
	2. H2 Database
	3. Spring Data JPA
	4. Spring Boot Actuator
	5. Spring Boot Devtools
	6. Lombok
a. Generate Project
b. Create new folder = Microservices
c. Create new folder in Microservices = Section_2
d. Copy generated project into Section_2 folder
e. Import project into IDE - Visual Studio Code
f. Run main class : AccountsApplication.java and check output
=============================================================
 2. Create REST Controller - AccountsController
=============================================================
package com.inb.accounts.controller;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;


@RestController
public class AccountsController {
    @GetMapping("sayHello")
    public String sayHello() {
        return "Hello World";
    }
    
}
=============================================================
 3. Check output of RestAPI on browser
=============================================================
http://localhost:8080/sayHello


=============================================================
 4. Configuring H2 DB and YAML properties
=============================================================
1. Rename from application.properties to application.yml

server:
  port: 8080
spring:
  datasource:
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
    username: sa
    password: ''
  h2:
    console:
      enabled: true
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update
    show-sql: true

2. Create new file schema.sql

CREATE TABLE IF NOT EXISTS `customer` (
  `customer_id` int AUTO_INCREMENT  PRIMARY KEY,
  `name` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `mobile_number` varchar(20) NOT NULL,
  `created_at` date NOT NULL,
  `created_by` varchar(20) NOT NULL,
  `updated_at` date DEFAULT NULL,
    `updated_by` varchar(20) DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS `accounts` (
  `customer_id` int NOT NULL,
   `account_number` int AUTO_INCREMENT  PRIMARY KEY,
  `account_type` varchar(100) NOT NULL,
  `branch_address` varchar(200) NOT NULL,
  `created_at` date NOT NULL,
   `created_by` varchar(20) NOT NULL,
   `updated_at` date DEFAULT NULL,
    `updated_by` varchar(20) DEFAULT NULL
);

3. Take restart of application
4. Copy paste the H2 database url and open on browser
http://localhost:8080/h2-console/

5. Check created tables ( customer and accounts )

=============================================================
 5. Writing Spring Data JPA entities to interact with DB tables
=============================================================
1.  Create new class in com.inb.accounts.entity as BaseEntity to store the common columns

package com.inb.accounts.entity;

import java.time.LocalDateTime;

import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;

import jakarta.persistence.Column;
import jakarta.persistence.MappedSuperclass;
import lombok.Getter;
import lombok.Setter;
import lombok.ToString;

@MappedSuperclass
@Getter @Setter @ToString
public class BaseEntity {

    @CreatedDate
    @Column(updatable = false)
    private LocalDateTime createdAt;

    @CreatedBy
    @Column(updatable = false)
    private String createdBy;

    @LastModifiedDate
    @Column(insertable = false)
    private LocalDateTime updatedAt;

    @LastModifiedBy
    @Column(insertable = false)
    private String updatedBy;
}

2. Create new class in com.inb.accounts.entity as Customer to store customer details

package com.inb.accounts.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Getter @Setter @ToString @AllArgsConstructor @NoArgsConstructor
public class Customer extends  BaseEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name="customer_id")
    private Long customerId;

    private String name;

    private String email;

    @Column(name="mobile_number")
    private String mobileNumber;

}

3. Create new class in com.inb.accounts.entity as Acccounts to store Accounts details
package com.inb.accounts.entity;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Getter @Setter @ToString @AllArgsConstructor @NoArgsConstructor
public class Accounts extends  BaseEntity {

    @Column(name="customer_id")
    private Long customerId;

    @Column(name="account_number")
    @Id
    private Long accountNumber;

    @Column(name="account_type")
    private String accountType;

    @Column(name="branch_address")
    private String branchAddress;

}

=============================================================
 6. Writing Repositories to interact with DB tables
=============================================================
1. Create new class in package com.inb.accounts.repository as CustomerRepository

package com.inb.accounts.repository;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.inb.accounts.entity.Customer;

@Repository
public interface CustomerRepository extends JpaRepository<Customer, Long> {

}


2. Create new class in package com.inb.accounts.repository as AccountsRepository

package com.inb.accounts.repository;


import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.inb.accounts.entity.Accounts;

@Repository
public interface AccountsRepository extends JpaRepository<Accounts, Long> {

}


